{"version":3,"sources":["../../src/actions/upload.js"],"names":["cancelUpload","uuid","client","observable","request","url","clientConfig","dataset","withCredentials","method","uploadUrl","options","testUrl","pipe","validUrl","type","json","status","Error","enableSignedUrls","muxBody","input","playback_policy","query","JSON","stringify","filename","split","slice","studioClient","headers","result","asset","results","document","id","uploadFile","file","testFile","fileOptions","body","upload","event","updateAssetDocumentFromUpload","doc","err","getUpload","assetId","pollUpload","maxTries","pollInterval","tries","Promise","resolve","reject","setInterval","data","asset_id","clearInterval","_id","_type","playbackId","playback_ids","uploadId","createOrReplace","then","window","File","optionsFromFile","error","parsed","URL","protocol","match","opts","fileOpts","preserveFilename","undefined","name","contentType"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport client from 'part:@sanity/base/client'\nimport {uuid as generateUuid} from '@sanity/uuid'\nimport {isString} from 'lodash'\nimport {throwError, of, from, concat, defer} from 'rxjs'\nimport {mergeMap, catchError, mergeMapTo, switchMap} from 'rxjs/operators'\nimport studioClient from 'part:@sanity/base/client'\nimport {createUpChunkObservable} from '../clients/upChunkObservable'\nimport {getAsset} from '../actions/assets'\nimport {testSecretsObservable} from '../actions/secrets'\n\nexport function cancelUpload(uuid) {\n  return client.observable.request({\n    url: `/addons/mux/uploads/${client.clientConfig.dataset}/${uuid}`,\n    withCredentials: true,\n    method: 'DELETE',\n  })\n}\n\nexport function uploadUrl(url, options = {}) {\n  return testUrl(url).pipe(\n    switchMap((validUrl) => {\n      return concat(\n        of({type: 'url', url: validUrl}),\n        testSecretsObservable().pipe(\n          switchMap((json) => {\n            if (!json || !json.status) {\n              return throwError(new Error('Invalid credentials'))\n            }\n            const uuid = generateUuid()\n            const {enableSignedUrls} = options\n            const muxBody = {\n              input: validUrl,\n              playback_policy: [enableSignedUrls ? 'signed' : 'public'],\n            }\n            const query = {\n              muxBody: JSON.stringify(muxBody),\n              filename: validUrl.split('/').slice(-1)[0],\n            }\n            const dataset = studioClient.clientConfig.dataset\n            return defer(() =>\n              client.observable.request({\n                url: `/addons/mux/assets/${dataset}`,\n                withCredentials: true,\n                method: 'POST',\n                headers: {\n                  'MUX-Proxy-UUID': uuid,\n                  'Content-Type': 'application/json',\n                },\n                query,\n              })\n            ).pipe(\n              mergeMap((result) => {\n                const asset =\n                  (result && result.results && result.results[0] && result.results[0].document) ||\n                  null\n                if (!asset) {\n                  return throwError(new Error('No asset document returned'))\n                }\n                return of({type: 'success', id: uuid, asset})\n              })\n            )\n          })\n        )\n      )\n    })\n  )\n}\n\nexport function uploadFile(file, options = {}) {\n  return testFile(file).pipe(\n    switchMap((fileOptions) => {\n      return concat(\n        of({type: 'file', file: fileOptions}),\n        testSecretsObservable().pipe(\n          switchMap((json) => {\n            if (!json || !json.status) {\n              return throwError(new Error('Invalid credentials'))\n            }\n            const uuid = generateUuid()\n            const {enableSignedUrls} = options\n            const body = {\n              playback_policy: [enableSignedUrls ? 'signed' : 'public'],\n              // TODO: These parameters were enabled by Sanity, but we are not using them yet\n              // mp4_support: false (default),\n              // normalize_audio: false (default),\n              // master_access: false (default),\n            }\n            return concat(\n              of({type: 'uuid', uuid}),\n              defer(() =>\n                client.observable.request({\n                  url: `/addons/mux/uploads/${studioClient.clientConfig.dataset}`,\n                  withCredentials: true,\n                  method: 'POST',\n                  headers: {\n                    'MUX-Proxy-UUID': uuid,\n                    'Content-Type': 'application/json',\n                  },\n                  body,\n                })\n              ).pipe(\n                mergeMap((result) => {\n                  return createUpChunkObservable(uuid, result.upload.url, file).pipe(\n                    // eslint-disable-next-line max-nested-callbacks\n                    mergeMap((event) => {\n                      if (event.type !== 'success') {\n                        return of(event)\n                      }\n                      return from(updateAssetDocumentFromUpload(uuid)).pipe(\n                        // eslint-disable-next-line max-nested-callbacks\n                        mergeMap((doc) => of({...event, asset: doc}))\n                      )\n                    }),\n                    // eslint-disable-next-line max-nested-callbacks\n                    catchError((err) => {\n                      // Delete asset document\n                      return cancelUpload(uuid).pipe(mergeMapTo(throwError(err)))\n                    })\n                  )\n                })\n              )\n            )\n          })\n        )\n      )\n    })\n  )\n}\n\nexport function getUpload(assetId) {\n  return client.request({\n    url: `/addons/mux/uploads/${studioClient.clientConfig.dataset}/${assetId}`,\n    withCredentials: true,\n    method: 'GET',\n  })\n}\n\nexport default {uploadUrl, uploadFile, getUpload}\n\nfunction pollUpload(uuid) {\n  const maxTries = 10\n  let pollInterval\n  let tries = 0\n  let assetId\n  let upload\n  return new Promise((resolve, reject) => {\n    pollInterval = setInterval(async () => {\n      try {\n        upload = await getUpload(uuid)\n      } catch (err) {\n        reject(err)\n        return\n      }\n      assetId = upload && upload.data && upload.data.asset_id\n      if (assetId) {\n        clearInterval(pollInterval)\n        resolve(upload)\n      }\n      if (tries > maxTries) {\n        clearInterval(pollInterval)\n        reject(new Error('Upload did not finish'))\n      }\n      tries++\n    }, 2000)\n  })\n}\n\nasync function updateAssetDocumentFromUpload(uuid) {\n  let upload\n  let asset\n  try {\n    upload = await pollUpload(uuid)\n  } catch (err) {\n    return Promise.reject(err)\n  }\n  try {\n    asset = await getAsset(upload.data.asset_id)\n  } catch (err) {\n    return Promise.reject(err)\n  }\n  const doc = {\n    _id: uuid,\n    _type: 'mux.videoAsset',\n    status: asset.data.status,\n    data: asset.data,\n    assetId: asset.data.id,\n    playbackId: asset.data.playback_ids[0].id,\n    uploadId: upload.data.id,\n  }\n  return client.createOrReplace(doc).then(() => {\n    return doc\n  })\n}\n\nfunction testFile(file) {\n  if (typeof window !== 'undefined' && file instanceof window.File) {\n    const fileOptions = optionsFromFile(file)\n    return of(fileOptions)\n  }\n  return throwError(new Error('Invalid file'))\n}\n\nfunction testUrl(url) {\n  const error = new Error('Invalid URL')\n  if (!isString(url)) {\n    return throwError(error)\n  }\n  let parsed\n  try {\n    parsed = new URL(url)\n  } catch (err) {\n    return throwError(error)\n  }\n  if (parsed && !parsed.protocol.match(/http:|https:/)) {\n    return throwError(error)\n  }\n  return of(url)\n}\n\nfunction optionsFromFile(opts, file) {\n  if (typeof window === 'undefined' || !(file instanceof window.File)) {\n    return opts\n  }\n  const fileOpts = {\n    filename: opts.preserveFilename === false ? undefined : file.name,\n    contentType: file.type,\n  }\n\n  return {\n    ...{\n      filename: opts.preserveFilename === false ? undefined : file.name,\n      contentType: file.type,\n    },\n    fileOpts,\n  }\n}\n"],"file":"upload.js"}