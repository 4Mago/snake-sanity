{"version":3,"sources":["../../src/components/Setup.js"],"names":["propTypes","onSave","PropTypes","func","isRequired","onCancel","secrets","shape","token","string","secretKey","enableSignedUrls","bool","signingKeyId","signingKeyPrivate","MuxVideoInputSetup","Component","getDerivedStateFromProps","nextProps","nextState","constructor","props","isLoading","error","event","setState","currentTarget","value","checked","preventDefault","handleError","err","console","state","hasValidSigningKeys","data","id","private_key","message","result","status","firstField","React","createRef","componentDidMount","current","focus","render","styles","root","handleOnSubmit","tokenInputId","formField","handleTokenChanged","secretKeyInputId","handleSecretKeyChanged","enableSignedUrlsInputId","handleEnableSignedUrls","paragraph","buttons","handleSaveToken","handleCancel","notice"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAEC,mBAAUC,IAAV,CAAeC,UADP;AAEhBC,EAAAA,QAAQ,EAAEH,mBAAUC,IAAV,CAAeC,UAFT;AAGhBE,EAAAA,OAAO,EAAEJ,mBAAUK,KAAV,CAAgB;AACvBC,IAAAA,KAAK,EAAEN,mBAAUO,MADM;AAEvBC,IAAAA,SAAS,EAAER,mBAAUO,MAFE;AAGvBE,IAAAA,gBAAgB,EAAET,mBAAUU,IAHL;AAIvBC,IAAAA,YAAY,EAAEX,mBAAUO,MAJD;AAKvBK,IAAAA,iBAAiB,EAAEZ,mBAAUO;AALN,GAAhB;AAHO,CAAlB;;AAYA,MAAMM,kBAAN,SAAiCC,gBAAjC,CAA2C;AAaV,SAAxBC,wBAAwB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACpD,QAAI,CAACA,SAAS,CAACb,OAAf,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD,QAAIY,SAAS,CAACZ,OAAd,EAAuB;AACrB,aAAO;AACLE,QAAAA,KAAK,EAAEU,SAAS,CAACZ,OAAV,CAAkBE,KADpB;AAELE,QAAAA,SAAS,EAAEQ,SAAS,CAACZ,OAAV,CAAkBI,SAFxB;AAGLC,QAAAA,gBAAgB,EAAEO,SAAS,CAACZ,OAAV,CAAkBK,gBAH/B;AAILE,QAAAA,YAAY,EAAEK,SAAS,CAACZ,OAAV,CAAkBO,YAJ3B;AAKLC,QAAAA,iBAAiB,EAAEI,SAAS,CAACZ,OAAV,CAAkBQ;AALhC,OAAP;AAOD;;AACD,WAAO,IAAP;AACD;;AAEDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;;AACjB,UAAMA,KAAN,CADiB;AAAA;;AAAA,0CA5BJ,sBAAS,eAAT,CA4BI;;AAAA,8CA3BA,sBAAS,gBAAT,CA2BA;;AAAA,qDA1BO,sBAAS,0BAAT,CA0BP;;AAAA,mCAxBX;AACNb,MAAAA,KAAK,EAAE,IADD;AAENE,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,gBAAgB,EAAE,KAHZ;AAINW,MAAAA,SAAS,EAAE,KAJL;AAKNC,MAAAA,KAAK,EAAE;AALD,KAwBW;;AAAA,gDAiBGC,KAAD,IAAW;AAC9B,WAAKC,QAAL,CAAc;AAACjB,QAAAA,KAAK,EAAEgB,KAAK,CAACE,aAAN,CAAoBC;AAA5B,OAAd;AACD,KAnBkB;;AAAA,oDAqBOH,KAAD,IAAW;AAClC,WAAKC,QAAL,CAAc;AAACf,QAAAA,SAAS,EAAEc,KAAK,CAACE,aAAN,CAAoBC;AAAhC,OAAd;AACD,KAvBkB;;AAAA,oDAyBOH,KAAD,IAAW,KAAKC,QAAL,CAAc;AAACd,MAAAA,gBAAgB,EAAEa,KAAK,CAACE,aAAN,CAAoBE;AAAvC,KAAd,CAzBjB;;AAAA,0CA2BHJ,KAAD,IAAW;AACxB,WAAKH,KAAL,CAAWhB,QAAX;AACD,KA7BkB;;AAAA,4CA+BDmB,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AACD,KAjCkB;;AAAA,4EAmCD,aAAY;AAC5B,UAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3BC,QAAAA,OAAO,CAACT,KAAR,CAAcQ,GAAd,EAD2B,CACR;;AACnB,QAAA,KAAI,CAACN,QAAL,CAAc;AACZH,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,KAAK,EAAE;AAFK,SAAd;AAID,OAND;;AAOA,MAAA,KAAI,CAACE,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAE;AAAZ,OAAd;;AACA,UAAMd,KAAK,GAAG,KAAI,CAACyB,KAAL,CAAWzB,KAAX,IAAoB,IAAlC;AACA,UAAME,SAAS,GAAG,KAAI,CAACuB,KAAL,CAAWvB,SAAX,IAAwB,IAA1C;AACA,UAAMC,gBAAgB,GAAG,KAAI,CAACsB,KAAL,CAAWtB,gBAAX,IAA+B,KAAxD;AACA,UAAIE,YAAY,GAAG,KAAI,CAACoB,KAAL,CAAWpB,YAAX,IAA2B,IAA9C;AACA,UAAIC,iBAAiB,GAAG,KAAI,CAACmB,KAAL,CAAWnB,iBAAX,IAAgC,IAAxD;AAEA,UAAMoB,mBAAmB,SAAS,mCAAqBrB,YAArB,EAAmCC,iBAAnC,CAAlC;;AAEA,UAAI;AACF,cAAM,0BAAYN,KAAZ,EAAmBE,SAAnB,EAA8BC,gBAA9B,EAAgDE,YAAhD,EAA8DC,iBAA9D,CAAN;AACD,OAFD,CAEE,OAAOiB,GAAP,EAAY;AACZD,QAAAA,WAAW,CAACC,GAAD,CAAX;AACA;AACD;;AAED,UAAI,CAACG,mBAAD,IAAwBvB,gBAA5B,EAA8C;AAC5C,YAAI;AAAA,4CACqB,iCADrB;AAAA,cACMwB,IADN,yBACMA,IADN;;AAEFtB,UAAAA,YAAY,GAAGsB,IAAI,CAACC,EAApB;AACAtB,UAAAA,iBAAiB,GAAGqB,IAAI,CAACE,WAAzB;AACA,gBAAM,0BAAY7B,KAAZ,EAAmBE,SAAnB,EAA8BC,gBAA9B,EAAgDE,YAAhD,EAA8DC,iBAA9D,CAAN;AACD,SALD,CAKE,cAAoB;AAAA,cAAXwB,OAAW,SAAXA,OAAW;;AACpB,UAAA,KAAI,CAACb,QAAL,CAAc;AAAEF,YAAAA,KAAK,EAAEe;AAAT,WAAd;AACD;AACF;;AAED,UAAIC,MAAJ;;AAEA,UAAI;AACFA,QAAAA,MAAM,SAAS,2BAAf;AACD,OAFD,CAEE,OAAOR,GAAP,EAAY;AACZD,QAAAA,WAAW,CAACC,GAAD,CAAX;AACA;AACD;;AAED,MAAA,KAAI,CAACN,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAE;AAAZ,OAAd;;AAEA,UAAIiB,MAAM,CAACC,MAAX,EAAmB;AACjB,QAAA,KAAI,CAACnB,KAAL,CAAWpB,MAAX,CAAkB;AAACO,UAAAA,KAAD;AAAQE,UAAAA,SAAR;AAAmBC,UAAAA,gBAAnB;AAAqCE,UAAAA,YAArC;AAAmDC,UAAAA;AAAnD,SAAlB;;AACA;AACD;;AAEDgB,MAAAA,WAAW,CAAC;AAACP,QAAAA,KAAK,EAAE;AAAR,OAAD,CAAX;AACD,KAvFkB;;AAEjB,QAAIF,KAAK,CAACf,OAAV,EAAmB;AAAA,2BAC6De,KAAK,CAACf,OADnE;AAAA,UACVE,KADU,kBACVA,KADU;AAAA,UACHE,SADG,kBACHA,SADG;AAAA,UACQC,gBADR,kBACQA,gBADR;AAAA,UAC0BE,YAD1B,kBAC0BA,YAD1B;AAAA,UACwCC,iBADxC,kBACwCA,iBADxC;AAEjB,WAAKmB,KAAL,CAAWzB,KAAX,GAAmBA,KAAnB;AACA,WAAKyB,KAAL,CAAWvB,SAAX,GAAuBA,SAAvB;AACA,WAAKuB,KAAL,CAAWtB,gBAAX,GAA8BA,gBAA9B;AACA,WAAKsB,KAAL,CAAWpB,YAAX,GAA0BA,YAA1B;AACA,WAAKoB,KAAL,CAAWnB,iBAAX,GAA+BA,iBAA/B;AACD;;AACD,SAAK2B,UAAL,gBAAkBC,eAAMC,SAAN,EAAlB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,UAAL,CAAgBI,OAAhB,CAAwBC,KAAxB;AACD;;AA0EDC,EAAAA,MAAM,GAAG;AAAA,sBACoB,KAAKd,KADzB;AAAA,QACAV,KADA,eACAA,KADA;AAAA,QACOD,SADP,eACOA,SADP;AAEP,wBACE;AAAK,MAAA,SAAS,EAAE0B,eAAOC;AAAvB,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,oBACE,6BAAC,iBAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,MAAM,EAAC,qBAFT;AAGE,MAAA,WAAW,EAAC,uFAHd;AAIE,MAAA,eAAe,EAAE;AAJnB,oBAME,6BAAC,iBAAD;AACE,MAAA,eAAe,EAAE,KADnB;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,QAAQ,EAAE,KAAKC,YAHjB;AAIE,MAAA,KAAK,EAAE,CAJT;AAKE,MAAA,SAAS,EAAEH,eAAOI;AALpB,oBAOE,6BAAC,iBAAD;AACE,MAAA,EAAE,EAAE,KAAKD,YADX;AAEE,MAAA,GAAG,EAAE,KAAKV,UAFZ;AAGE,MAAA,QAAQ,EAAE,KAAKY,kBAHjB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWzB,KAAX,IAAoB;AAL7B,MAPF,CANF,eAsBE,6BAAC,iBAAD;AACE,MAAA,eAAe,EAAE,KADnB;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,QAAQ,EAAE,KAAK8C,gBAHjB;AAIE,MAAA,KAAK,EAAE,CAJT;AAKE,MAAA,SAAS,EAAEN,eAAOI;AALpB,oBAOE,6BAAC,iBAAD;AACE,MAAA,EAAE,EAAE,KAAKE,gBADX;AAEE,MAAA,QAAQ,EAAE,KAAKC,sBAFjB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWvB,SAAX,IAAwB;AAJjC,MAPF,CAtBF,eAoCE,6BAAC,iBAAD;AACE,MAAA,eAAe,EAAE,KADnB;AAEE,MAAA,KAAK,EAAC,oBAFR;AAGE,MAAA,QAAQ,EAAE,KAAK8C,uBAHjB;AAIE,MAAA,KAAK,EAAE,CAJT;AAKE,MAAA,SAAS,EAAER,eAAOI;AALpB,oBAOE,6BAAC,iBAAD;AACE,MAAA,EAAE,EAAE,KAAKI,uBADX;AAEE,MAAA,QAAQ,EAAE,KAAKC,sBAFjB;AAGE,MAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWtB,gBAAX,IAA+B;AAH1C,MAPF,EAYG,KAAKsB,KAAL,CAAWpB,YAAX,gBACC;AAAG,MAAA,SAAS,EAAEmC,eAAOU;AAArB,mEAC6C,2CAAO,KAAKzB,KAAL,CAAWpB,YAAlB,CAD7C,4IADD,GAMG,IAlBN,CApCF,eAyDE;AAAK,MAAA,SAAS,EAAEmC,eAAOW;AAAvB,oBACE,6BAAC,iBAAD;AACE,MAAA,OAAO,EAAErC,SADX;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,OAAO,EAAE,KAAKsC;AAJhB,cADF,eASE,6BAAC,iBAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,OAAO,EAAE,KAAKC;AAApD,gBATF,CAzDF,EAuEGtC,KAAK,iBAAI;AAAG,MAAA,SAAS,EAAEyB,eAAOzB;AAArB,OAA6BA,KAA7B,CAvEZ,CADF,eA0EE;AAAK,MAAA,SAAS,EAAEyB,eAAOc;AAAvB,oBACE,oFAC2C,GAD3C,eAEE;AACE,MAAA,IAAI,EAAC,kDADP;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,GAAG,EAAC;AAHN,4BAFF,MADF,eAYE,6FACsC,0DADtC,qCAEoB,wDAFpB,YAZF,CA1EF,CADF,CADF;AAgGD;;AAxNwC;;AA2N3C/C,kBAAkB,CAACf,SAAnB,GAA+BA,SAA/B;eAEee,kB","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nimport {uniqueId} from 'lodash'\nimport {createSigningKeys, haveValidSigningKeys, saveSecrets, testSecrets} from '../actions/secrets'\n\nimport Button from 'part:@sanity/components/buttons/default'\nimport Fieldset from 'part:@sanity/components/fieldsets/default'\nimport FormField from 'part:@sanity/components/formfields/default'\nimport TextInput from 'part:@sanity/components/textinputs/default'\nimport Checkbox from 'part:@sanity/components/toggles/checkbox'\n\nimport styles from './Setup.css'\n\nconst propTypes = {\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  secrets: PropTypes.shape({\n    token: PropTypes.string,\n    secretKey: PropTypes.string,\n    enableSignedUrls: PropTypes.bool,\n    signingKeyId: PropTypes.string,\n    signingKeyPrivate: PropTypes.string,\n  }),\n}\n\nclass MuxVideoInputSetup extends Component {\n  tokenInputId = uniqueId('MuxTokenInput')\n  secretKeyInputId = uniqueId('MuxSecretInput')\n  enableSignedUrlsInputId = uniqueId('MuxEnableSignedUrlsInput')\n\n  state = {\n    token: null,\n    secretKey: null,\n    enableSignedUrls: false,\n    isLoading: false,\n    error: null,\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (!nextState.secrets) {\n      return null\n    }\n    if (nextProps.secrets) {\n      return {\n        token: nextProps.secrets.token,\n        secretKey: nextProps.secrets.secretKey,\n        enableSignedUrls: nextProps.secrets.enableSignedUrls,\n        signingKeyId: nextProps.secrets.signingKeyId,\n        signingKeyPrivate: nextProps.secrets.signingKeyPrivate,\n      }\n    }\n    return null\n  }\n\n  constructor(props) {\n    super(props)\n    if (props.secrets) {\n      const {token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate} = props.secrets\n      this.state.token = token\n      this.state.secretKey = secretKey\n      this.state.enableSignedUrls = enableSignedUrls\n      this.state.signingKeyId = signingKeyId\n      this.state.signingKeyPrivate = signingKeyPrivate\n    }\n    this.firstField = React.createRef()\n  }\n\n  componentDidMount() {\n    this.firstField.current.focus()\n  }\n\n  handleTokenChanged = (event) => {\n    this.setState({token: event.currentTarget.value})\n  }\n\n  handleSecretKeyChanged = (event) => {\n    this.setState({secretKey: event.currentTarget.value})\n  }\n\n  handleEnableSignedUrls = (event) => this.setState({enableSignedUrls: event.currentTarget.checked})\n\n  handleCancel = (event) => {\n    this.props.onCancel()\n  }\n\n  handleOnSubmit = (event) => {\n    event.preventDefault()\n  }\n\n  handleSaveToken = async () => {\n    const handleError = (err) => {\n      console.error(err) // eslint-disable-line no-console\n      this.setState({\n        isLoading: false,\n        error: 'Something went wrong saving the token. See console.error for more info.',\n      })\n    }\n    this.setState({isLoading: true})\n    const token = this.state.token || null\n    const secretKey = this.state.secretKey || null\n    const enableSignedUrls = this.state.enableSignedUrls || false\n    let signingKeyId = this.state.signingKeyId || null\n    let signingKeyPrivate = this.state.signingKeyPrivate || null\n\n    const hasValidSigningKeys = await haveValidSigningKeys(signingKeyId, signingKeyPrivate)\n\n    try {\n      await saveSecrets(token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate)\n    } catch (err) {\n      handleError(err)\n      return\n    }\n\n    if (!hasValidSigningKeys && enableSignedUrls) {\n      try {\n        const { data } = await createSigningKeys()\n        signingKeyId = data.id\n        signingKeyPrivate = data.private_key\n        await saveSecrets(token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate)\n      } catch ({ message }) {\n        this.setState({ error: message })\n      }\n    }\n\n    let result\n\n    try {\n      result = await testSecrets()\n    } catch (err) {\n      handleError(err)\n      return\n    }\n\n    this.setState({isLoading: false})\n\n    if (result.status) {\n      this.props.onSave({token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate})\n      return\n    }\n\n    handleError({error: 'Invalid credentials'})\n  }\n\n  render() {\n    const {error, isLoading} = this.state\n    return (\n      <div className={styles.root}>\n        <form onSubmit={this.handleOnSubmit}>\n          <Fieldset\n            level={1}\n            legend=\"MUX API Credentials\"\n            description=\"The credentials will be stored safely in a hidden document only available to editors.\"\n            changeIndicator={false}\n          >\n            <FormField\n              changeIndicator={false}\n              label=\"Access Token\"\n              labelFor={this.tokenInputId}\n              level={0}\n              className={styles.formField}\n            >\n              <TextInput\n                id={this.tokenInputId}\n                ref={this.firstField}\n                onChange={this.handleTokenChanged}\n                type=\"text\"\n                value={this.state.token || ''}\n              />\n            </FormField>\n\n            <FormField\n              changeIndicator={false}\n              label=\"Secret Key\"\n              labelFor={this.secretKeyInputId}\n              level={0}\n              className={styles.formField}\n            >\n              <TextInput\n                id={this.secretKeyInputId}\n                onChange={this.handleSecretKeyChanged}\n                type=\"text\"\n                value={this.state.secretKey || ''}\n              />\n            </FormField>\n            <FormField\n              changeIndicator={false}\n              label=\"Enable Signed Urls\"\n              labelFor={this.enableSignedUrlsInputId}\n              level={0}\n              className={styles.formField}\n            >\n              <Checkbox\n                id={this.enableSignedUrlsInputId}\n                onChange={this.handleEnableSignedUrls}\n                checked={this.state.enableSignedUrls || false}\n              />\n              {this.state.signingKeyId ? (\n                <p className={styles.paragraph}>\n                  The signing key ID that Sanity will use is <code>{this.state.signingKeyId}</code>.\n                  This key is only used for previewing content in the Sanity UI. You should generate\n                  a different key to use in your application server.\n                </p>\n              ) : null}\n            </FormField>\n\n            <div className={styles.buttons}>\n              <Button\n                loading={isLoading}\n                color=\"primary\"\n                kind=\"default\"\n                onClick={this.handleSaveToken}\n              >\n                Save\n              </Button>\n              <Button color=\"primary\" kind=\"simple\" onClick={this.handleCancel}>\n                Cancel\n              </Button>\n            </div>\n\n            {error && <p className={styles.error}>{error}</p>}\n          </Fieldset>\n          <div className={styles.notice}>\n            <p>\n              To set up a new access token, go to your{' '}\n              <a\n                href=\"https://dashboard.mux.com/settings/access-tokens\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                account on mux.com\n              </a>\n              .\n            </p>\n            <p>\n              The access token needs permissions: <strong>Mux Video </strong>\n              (Full Access) and <strong>Mux Data</strong> (Read)\n            </p>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nMuxVideoInputSetup.propTypes = propTypes\n\nexport default MuxVideoInputSetup\n"],"file":"Setup.js"}